name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build-test:
    strategy:
      fail-fast: false
      matrix: { os: [ubuntu-latest, macos-latest, windows-latest] }
    runs-on: ${{ matrix.os }}

    env:
      BUILD_DIR: build
      CMAKE_BUILD_TYPE: Release

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup MSVC (Windows only)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.8.3'
          target: 'desktop'
          host: ${{ runner.os == 'Windows' && 'windows' || runner.os == 'macOS' && 'mac' || 'linux' }}
          arch: ${{ runner.os == 'Windows' && 'win64_msvc2022_64' || runner.os == 'macOS' && 'clang_64' || 'linux_gcc_64' }}
          modules: 'qtquickcontrols qt5compat'
          cache: 'false'

      - name: Configure (CMake + Ninja)
        run: cmake -S Blockchain_desktop_PDG -B ${{ env.BUILD_DIR }} -G Ninja -DCMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }}

      - name: Build
        run: cmake --build ${{ env.BUILD_DIR }} --parallel

      - name: CTest
        run: ctest --test-dir ${{ env.BUILD_DIR }} --output-on-failure

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ runner.os }}
          path: |
            ${{ env.BUILD_DIR }}/appBlockchain_desktop_PDG
            ${{ env.BUILD_DIR }}/appBlockchain_desktop_PDG.exe
            ${{ env.BUILD_DIR }}/appBlockchain_desktop_PDG.app
          if-no-files-found: ignore
